include ../mixins.pug

h1 Accessibility
|     21% der Schweiz sind betroffen. 
b Blinde Personen: 
|  Gut strukturierte Dokumente, 
|     Beschreibungstexte für visuelle Elemente, Bedienung über Tastatur möglich.
b Sehbehinderte Personen: 
|  Gute Kontraste, Gut vergrösserbares Layout, Trennung von Inhalt und Layout
b Hörbehinderte Personen: 
|  Text-Alternativen für auditive Elemente, visuelles Feedback für alle Aktionen, 
|     einfache geschriebene Texte
b Personen mit motorischen Einschränkungen: 
| Grosszügige Schaltflächen, Bedienung über Tastatur möglich, 
|     Keine ungewollten automatischen Aktionen
b Perosnen mit Lern- und Aufmerksamekeitsstörungen: 
|  Einfach geschriebene Texte, Gut lesbare Schriftarten, 
|     Keine ablenkenden Elemente

+para('Farbenblindheit: ')
    |  Webseiten könne mit Simulationen überprüft werden.
    |     Zur Sicherheit 
    b Mehrfachcodierung
    |  verwenden: Farbe und Form, Farbe und Icon, Farbe und Text.

+para('Farbkontrast: ')
    |  Wichtig für Personen 50+. Text und Texthintergrund möglichst "grossen" Unterschied.
    |     Kann mit 
    b Lighthouse
    |  überprüft werden, Color Picker schlägt beste Farben vor.

+para('Optimierung von Farbblindheit vs Optimierung des Farbkontrast: ')

+para('Chrome Accessibility Check in Kontext und Handlungsempfehlung: ')

+para('Zoombarkeit :')
    |  32% der Seiten im Internet disable Zoom
    |     UIs mit fixen Breiten sind nicht Zoombar. Zoom sollte immer möglich sein und zusammengehörigkeit sollte weiterhin bestehen

+para('Animationen' )
    |  Animationen sollte abstellbar sein, 
    |  das Verringert Ablenkung bei Konzentrationstörung und das Auslösen von Epilepsie und Migräne.

+para('Media: ')
    | Bilder sollen immer einen Alt-Text haben. 50% aller Seiten stellen keine Alt Tags zur verfügung.

+para('Screen Reader: ')
    b Herausforderung: 
    |  Fragmentierung der Nutzerbasis (NVDA 72%, JAWS 61%, VoiceOver 47%). 
    b Empfehlungen: 
    |  Keine Headings-Level auslassen, Semantic Elements richtig nutzen, 
    |  Skip-Links am Anfang der Seite (“Links zur Barrierefreiheit” / “Zu den Hauptinhalten“).

+para('WIA-ARIA (Web Accessibility Initiative – Accessibile RIA): ') 
    |  Erlaubt eine optimierte Abbildung des DOM Trees in den Accessibility Tree.
    b MDN: 
    |  Developers should prefer using the correct semantic HTML element over using ARIA
+para('Tables: ')
    |  Tables sollte mit Heading für Rows und Columns ausgestattet sein (th oder ARIA columnheader, rowheader). 
    b Probleme
    |  2 Tabellen werden verwendet, sehen aber aus wie eine einzige, 
    |  Screenreader liest Tabellen einzeln vor, 
    |  relation vom Inhalt zu Titel kann nicht hergestellt werden.
    b Weitere Fehler
    |  umkehren der Schreibrichtung, 
    |  Hover Effekt funktioniert nur, wenn man Maus verwenden kann 
    |  Gestylte Elemente (z.B.: div, span als Button), 
    |  Tabellen für Layout
    b Tricks um Accesibility zu ermöglichen / verbessern
    |  beschreibende HTML Elemente hinzufügen aber in der UI mit CSS verstecken, 
    |  Navigation zuerst, Bereiche Gruppieren, Semantic Markup nutzen 
    |  Headings in korrekter Reihenfolge, Regionen mit "invisible headern" versehen, 
    |  Tabellen verwenden für Daten, Form mit label Element für input Elemente (HTML 5 Validation nutzen).