include ../mixins.pug
h1 CSS Flexbox

+para('Facts: ')
    | Alle Elemente Verhalten sich wie "inline blocks" (erlaubt margin (left &amp; right) und paddding, erlaubt andere Elemente auf der gelichen Zeile, erlaubt 
    b width 
    | und
    b  height 

+para('flex-grow: ')
    | Wachstumsfaktor eines flexiblen Elements im zur Verfügung stehenden Raum eines Flex Containers. Default: 0 (nicht grösser werden)

+para('flex-shrink: ')
    | Schrumpffaktor eines Elements, wenn zu wenig Platz im flex container vorhanden ist, Default: 1

+para('flex-basis: ')
    | Alternative: content p Ist initialer Wert für Grösse eines flex item. flex-direction: row -&gt; value steht für
    | Breite,
    | column -&gt; value steht für Höhe

+para('flex-wrap: ')
    | <b>wrap</b>Falls nötig Elemente des Containers in mehrere Zeilen aufteilen

+para('(flex-order) order: ')
    | Werden in aufsteigender Reihenfolge dargestellt, Default: 0

pre.code
    code.language-css
        |.container {
        |    display: flex;
        |    flex-direction: row|row-reverse|column|column-reverse;
        |    flex-wrap: wrap;
        |    flex-flow: [flex-direction] [flex-wrap];
        |    align-items: stretch;
        |    /*nur sinvoll bei fixer Item Grösse*/
        |    justify-content: center;   }
        |.item {
        |    flex-grow: 1;
        |    flex-shrink: 1; 
        |    flex-basis: 20px;
        |    flex: [flex-grow] [flex-shrink] [flex-basis];   }
        |.baboItem { order: -1; }